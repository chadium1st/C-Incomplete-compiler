#include "Globals.h"
#include "Lexical.h"
#include "Syntax.h"

#include <iostream>
#include <string>
#include <stack>
#include <stdlib.h>
#include <xstring>

using namespace std;

stack <string> _stack;
//class SemanticAnalyzer {};
//class IntermediateCodeGenerator {};
//class CodeOptimizer {};

// MAIN FUNCTION:
int main() {

    Lexical objLexical;
    Syntax objSyntax;
    //SemanticAnalyzer objSemantic;
    //IntermediateCodeGenerator objICG;
    //CodeOptimizer objCO;

    string str = R"(
/* Program to match the Guessed number */
int hidden = 3;
float test = 3.0429;
int guess;
cout << "Enter(1 - 10) to guess the hidden number";
cin >> guess; //take input in variable guess
if (guess < hidden)
cout << "Your number is smaller";
else if (guess > hidden)
cout << "Your number
is greater";
else 
cout << "You GUESSED the exact number...";
)";

    cout << "FILE CONTENTS: " << endl << str << endl;
    cout << endl;

    cout << "Token(s) Generated By The Lexical Analyzer: " << endl;
    cout << endl;
    objLexical.parserMethod(str);

    cout << endl;
    cout << "End of Lexical Analyzer." << endl;

    //cout << endl;
    //tokenPrinter();
    //cout << endl;
    //parserPrinter();

    cout << endl;
    objSyntax.stackInitializer();
    //objSyntax.firstFollowDisplayer();
    objSyntax.LL1();

    cout << endl; cout << endl;
    //cout << "Stack Components (Bottom-up): " << endl;
    //objSyntax.printStack(_stack); 

    return 0;
}